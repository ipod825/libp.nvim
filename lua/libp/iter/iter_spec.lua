local iter = require("libp.iter")
local Set = require("libp.datatype.Set")

describe("from_range", function()
    it("Can omit ends", function()
        assert.are.same({ 1, 2, 3, 4 }, iter.range(4):collect())
    end)
    it("Defaults with step 1", function()
        assert.are.same({ 1, 2, 3, 4 }, iter.range(1, 4):collect())
    end)
    it("Supports customized step", function()
        assert.are.same({ 1, 3 }, iter.range(1, 4, 2):collect())
        assert.are.same({ 1, 3, 5 }, iter.range(1, 5, 2):collect())
    end)
    it("Can go from high to low", function()
        assert.are.same({ 4, 2 }, iter.range(4, 1, -2):collect())
        assert.are.same({ 5, 3, 1 }, iter.range(5, 1, -2):collect())
    end)
end)

describe("values", function()
    it("Returns values of the container", function()
        assert.are.equal(Set({ 1, 2, 3 }), Set(iter.values({ a = 1, b = 2, c = 3 }):collect()))
    end)
end)

describe("keys", function()
    it("Returns keys of the container", function()
        assert.are.equal(Set({ "a", "b", "c" }), Set(iter.keys({ a = 1, b = 2, c = 3 }):collect()))
    end)
end)
